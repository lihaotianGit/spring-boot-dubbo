spring.application.name=dubbo-provider

# SERVER
server.port=9091
server.session.timeout=30

# LOGGING
logging.config=classpath:log4j.properties
logging.level.org.mybatis.spring=INFO
logging.level.org.springframework=INFO

# DATASOURCE
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3307/spring-boot-dubbo?zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&characterEncoding=UTF-8&useSSL=false
spring.datasource.username=mysql
spring.datasource.password=mysql
spring.datasource.max-idle=250
spring.datasource.max-active=250
spring.datasource.max-wait=5000
spring.datasource.test-while-idle=true
spring.datasource.time-between-eviction-runs-millis=3600000

# MYBATIS
mybatis.config-location=classpath:mybatis/mybatis-config.xml

# DUBBO
#应用名称
dubbo.application.name=my-provider
#注册中心类型
dubbo.registry.protocol=zookeeper
#注册中心地址
dubbo.registry.address=127.0.0.1:2181
#暴露服务方式
dubbo.protocol.name=dubbo
#暴露服务端口
dubbo.protocol.port=20880

# REDIS
# Maximum number of redirects to follow when executing commands across the cluster.
#spring.redis.cluster.max-redirects=
# Comma-separated list of "host:port" pairs to bootstrap from.
#spring.redis.cluster.nodes=
# Database index used by the connection factory.
#spring.redis.database=0
# Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379
#spring.redis.url=redis://127.0.0.1:6379
# Redis server host.
spring.redis.host=127.0.0.1
# Login password of the redis server.
spring.redis.password=
# Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
spring.redis.pool.max-active=64
# Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
spring.redis.pool.max-idle=128
# Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
spring.redis.pool.max-wait=-1
# Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
spring.redis.pool.min-idle=16
# Redis server port.
spring.redis.port=63791
# Name of Redis server.
spring.redis.sentinel.master=master01
# Comma-separated list of host:port pairs.
spring.redis.sentinel.nodes=127.0.0.1:26379
# Connection timeout in milliseconds.
spring.redis.timeout=2000

# RocketMQ
# ONS Client 以下四项作为生产环境买了阿里云服务之后的配置,如果以下四项有配置,则可省略ons.client.NAMESRV_ADDR的配置
ons.client.producerId=producerId
ons.client.consumerId=consumerId
ons.client.AccessKey=AccessKey
ons.client.SecretKey=SecretKey

# mq topic
ons.client.topicStock=TOPIC-STOCK

# 使用本地的RocketMQ
ons.client.NAMESRV_ADDR=localhost:9876
# 顺序消息消费失败进行重试前的等待时间 单位(毫秒)
ons.client.suspendTimeMillis=3000
# 消息消费失败时的最大重试次数
ons.client.maxReconsumeTimes=3
# 设置每条消息消费的最大超时时间,超过这个时间,这条消息将会被视为消费失败,等下次重新投递再次消费. 每个业务需要设置一个合理的值. 单位(分钟)
ons.client.consumeTimeout=1
# 消费线程数量
ons.client.consumeThreadNums=20

